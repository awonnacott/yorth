// This line is not parsed
let e
setf e { pop }

let and
setf and { not or not pop not pop }
let nand
setf nand { or not pop not pop }
let nor
setf nor { not or pop pop }
let xor
setf xor { ~ pop pop }
let xnor
setf xnor { = pop pop }

let power
setf power { get b get e if { = b 0 } 0 { if = e 0 1 { * b power b - e 1 } } }

let filter
setf filter { def bool get list enum { get x if bool x x nil } list }